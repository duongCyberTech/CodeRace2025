# -*- coding: utf-8 -*-
"""Untitled4.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1QfiPdrIy6tk7s_kN7naZ_i4qOQzlra-j
"""

def parse_raw_can_frame(raw_frame):
    if len(raw_frame) < 3:
        raise ValueError("Frame too short to contain ID and DLC")

    # Extract arbitration ID (2 bytes)
    arbitration_id = (raw_frame[0] << 8) | raw_frame[1]

    # Extract DLC (1 byte)
    dlc = raw_frame[2]
    if dlc > 8:
        raise ValueError("DLC cannot be more than 8")

    # Extract data bytes
    data = raw_frame[3:3+dlc]

    return {
        "arbitration_id": arbitration_id,
        "dlc": dlc,
        "data": data
    }

raw_can_signals = [
    [0x01, 0x23, 0x08, 0x11, 0x22, 0x33, 0x44, 0x55, 0x66, 0x77, 0x88],
    [0x02, 0x10, 0x04, 0xDE, 0xAD, 0xBE, 0xEF],
    [0x00, 0xFF, 0x03, 0xAB, 0xCD, 0xEF],
    [0x03, 0x3C, 0x06, 0x01, 0x23, 0x45, 0x67, 0x89, 0xAB],
    [0x04, 0x01, 0x02, 0xFF, 0x00],
    [0x00, 0x7A, 0x08, 0x00, 0x11, 0x22, 0x33, 0x44, 0x55, 0x66, 0x77],
    [0x01, 0xBC, 0x01, 0x99],
    [0x07, 0xD0, 0x05, 0x10, 0x20, 0x30, 0x40, 0x50],
    [0x01, 0x00, 0x07, 0xAA, 0xBB, 0xCC, 0xDD, 0xEE, 0xFF, 0x01],
    [0x00, 0x01, 0x04, 0x12, 0x34, 0x56, 0x78]
]

for raw_input in raw_can_signals:
  parsed = parse_raw_can_frame(raw_input)
  print(raw_input)
  print("**")
  print(f"Arbitration ID: 0x{parsed['arbitration_id']:X}")
  print(f"DLC: {parsed['dlc']}")
  print(f"Data: {parsed['data']}")
  print("____________")